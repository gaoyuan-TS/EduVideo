"""
Django settings for te project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import sys
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR,'apps'))
sys.path.insert(0, os.path.join(BASE_DIR,'extra_apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '52+hgpf*!u1m#p4v@c25ovi-dtv+5ei01+m7cl_)*&zqqt&c)p'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

AUTHENTICATION_BACKENDS =(
    'users.views.CustomBackend',
)
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'courses',
    'users',
    'organization',
    'operation',
    'xadmin',
    'crispy_forms',
    'reversion',
    'captcha',
    'pure_pagination',
    'DjangoUeditor',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
AUTH_USER_MODEL = "users.UserProfile"
ROOT_URLCONF = 'te.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'te.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'test2',
            'USER': 'root',
            'PASSWORD': 'root',
            'HOST': '127.0.0.1',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR,"static"),
# )


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = "smtp.qq.com"
EMAIL_PORT = 25
EMAIL_HOST_USER = "1103313679@qq.com"
EMAIL_HOST_PASSWORD = "kuvgdhienxmsibgj"
EMAIL_USE_TLS= True
EMAIL_FROM = "1103313679@qq.com"

MEDIA_URL = '/media/'
MEDIA_ROOT =os.path.join(BASE_DIR,'media')


STATIC_ROOT =os.path.join(BASE_DIR,'static')

LOG_PATH = BASE_DIR+'/log/'
LOGGING = {
    'version': 1,   #定义了配置文件的版本
    'disable_existing_loggers': False,  ## True表示禁用logger
    # 格式化
    'formatters': {
        'default': {
            'format': '%(levelname)s %(asctime)s %(module)s %(funcName)s %(msecs)s %(message)s'
            },
        'simple': {
            'format': '%(asctime)s %(levelname)s %(message)s'
            },
        },
     # 处理日志的方式
    'handlers': {
        'v_handlers': {
            # 级别
            'level': 'DEBUG',
            # 存储方式
            "class": 'logging.handlers.RotatingFileHandler',
            # 日志文件大小
            'maxBytes': 5 * 1024,
            'encoding': 'utf8',
            # 日志文件路径
            'filename': '{}salary_all.log'.format(LOG_PATH),
            # 格式化方式
            'formatter': 'default',
            },
        'error': {
            'level': "ERROR",
            'class': 'logging.handlers.RotatingFileHandler',
            'maxBytes': 5 * 1024,
            'encoding': 'utf8',
            'filename': '{}salary_error.log'.format(LOG_PATH),
            'formatter': 'simple'
            }
        },
     # 配置日志的处理方式
    'loggers': {
        'django': {
            'handlers': ['v_handlers'],
            'propagate': True,
            },
        'django.request': {
            'handlers': ['error'],
            'level': 'ERROR',
            'propagate': True
            }

        },
     # 过滤器
    'filters': {

        }
    }

